@page "/PatientView"
@using AdvancedAnalysisDesign.Models.Database
@using AdvancedAnalysisDesign.Models.Payloads
@using AdvancedAnalysisDesign.Services
@using InputType = MudBlazor.InputType

@using AdvancedAnalysisDesign.Enums
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@inject PatientService PatientService
@inject ISnackbar Snackbar
@inject NavigationManager NavManager

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="6">
            <MudPaper Elevation="5" Class="pa-4 pt-2">

                @* Data table for Medication *@
                @if (medicationTableData.Any())@*if statement to check if medication is on the system. if not display a mudalert*@
                {
                    <MudTable Height="650px" FixedHeader="true" Items="medicationTableData" Hover="@hover" Breakpoint="Breakpoint.Sm" @bind-SelectedItem="medicationSelected">

                        <ToolBarContent>
                            <MudText Typo="Typo.h6">@PatientmedicationData.User.UserDetail.FirstName's Medication</MudText>
                                <MudToolBarSpacer></MudToolBarSpacer>
                            <MudText Typo="Typo.h6">Select a medication to schedule a timeslot for pickup.</MudText>
                        </ToolBarContent>

                        <HeaderContent>
                            <MudTh>Name</MudTh>
                        </HeaderContent>

                        <RowTemplate Context="row">
                            <MudTd DataLabel="Name">@row.Medication.MedicationName</MudTd>
                            <MudTd DataLabel="Name">@row.</MudTd>
                        </RowTemplate>
                    </MudTable>
                }
                else
                {
                    <MudAlert Severity="Severity.Info">You currently have no medication on the system. If this is an error please contact example@example.com</MudAlert>
                }


            </MudPaper>
        </MudItem>

        <MudItem xs="6">
            <MudPaper Elevation="5" Style="height: 700px">
                
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code{
    private bool hover = true;
    private bool schedule = false;

    private Patient PatientmedicationData = new Patient();
    private PatientMedication PatientbloodworkData = new PatientMedication();

    private List<PatientMedication> medicationTableData = new List<PatientMedication>();
    private List<PatientBloodwork> bloodworkTableData = new List<PatientBloodwork>();
    private List<PatientMedication> pickupTableData = new List<PatientMedication>();



    private PatientMedication _value = new();
    private PatientMedication medicationSelected { get { return _value; } set { _value = value; OnSelect(); } }
    private bool showPickup;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsInRole(Role.Patient.ToString()) || user.IsInRole(Role.Admin.ToString()))
        {
            PatientmedicationData = await PatientService.FetchUserMedication();

            //Create medication and bloodwork data if any available
            if (PatientmedicationData.Medications.Any())
            {

                medicationTableData = PatientmedicationData.Medications;

                //Generate bloodwork data from user medication
                foreach (PatientMedication Med in medicationTableData)
                {

                    int MedId = Med.Id;
                    PatientbloodworkData = await PatientService.FetchUserBloodwork(MedId);

                    foreach (PatientBloodwork blood in PatientbloodworkData.PatientBloodworks)
                    {
                        bloodworkTableData.Add(blood);
                    }
                }

                //generate pickup data from user medication
                foreach (PatientMedication Med in medicationTableData)
                {
                    if (Med.BloodworkRequired == true && Med.Pickup.IsPickedUp == false)
                    {
                        pickupTableData.Add(Med);
                    }
                }
            }

        }
        else
        {
            NavigationManager.NavigateTo("/", true);
        }
    }

    async Task OnSelect()
    {
        
    }


}
